import*as Utils from"../utils.js";import TomSelect from"tom-select";import Api from"../api.js";const AdminUtilsFunctions={buildTomSelect(t,e,o,n,s){if(!t)return;const i={plugins:{remove_button:{title:"Remove this item"}},onInitialize(){}};if(o&&(i.load=(e,i)=>{const c=Array.from(t.selectedOptions).map((t=>t.value));n.id_not_in=c.join(","),o(e,n,AdminUtilsFunctions.callBackTomSelectSearchAPI(i,s))}),e={...i,...e},e?.options?.length>20){const o=20,n=e.options.length;let s=0;const i=e.options.slice(s,o),c={...e};c.options=i;const l=new TomSelect(t,c);s+=o;const a=setInterval((()=>{s>n-1&&clearInterval(a);let t={...e};t=e.options.slice(s,s+o),s+=o,l.addOptions(t),l.setValue(e.items)}),200);return l}return new TomSelect(t,e)},callBackTomSelectSearchAPI:(t,e)=>({success:o=>{const n=e.success(o);t(n)}}),fetchCourses(t="",e={},o){const n=Api.admin.apiSearchCourses;e.search=t;const s={headers:{"Content-Type":"application/json","X-WP-Nonce":lpDataAdmin.nonce},method:"POST",body:JSON.stringify(e)};Utils.lpFetchAPI(n,s,o)},fetchUsers(t="",e={},o){const n=Api.admin.apiSearchUsers;e.search=t;const s={headers:{"Content-Type":"application/json","X-WP-Nonce":lpDataAdmin.nonce},method:"POST",body:JSON.stringify(e)};Utils.lpFetchAPI(n,s,o)}};export{Utils,AdminUtilsFunctions,Api};